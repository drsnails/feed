{"version":3,"sources":["cmps/ToyPreview.jsx","cmps/ToyList.jsx","services/httpService.js","services/toyService.js","store/actions/toyAction.js","cmps/ToyFilter.jsx","services/userService.js","store/actions/userAction.js","services/reviewService.js","store/actions/reviewActions.js","pages/ToyApp.jsx","cmps/Header.jsx","services/cloudinarySerivice.js","pages/ToyEdit.jsx","store/reducers/reviewReducer.js","cmps/ReviewPreview.jsx","services/socketService.js","cmps/ReviewList.jsx","cmps/Modal.jsx","cmps/ChatRoom.jsx","pages/ToyDetails.jsx","pages/LogIn.jsx","store/actions/systemActions.js","pages/SignUp.jsx","App.jsx","serviceWorker.js","store/reducers/toyReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","paddingTop","margin","objectFit","backgroundSize","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","ToyPreview","props","classes","toy","onRemove","imgUrl","name","Card","className","CardHeader","title","subheader","type","action","IconButton","color","onClick","_id","aria-label","fontSize","CardMedia","image","CardContent","Typography","variant","component","inStock","price","href","to","ToyList","toys","map","key","axios","Axios","withCredentials","endpoint","data","ajax","a","method","console","log","url","res","dir","response","status","window","location","assign","toyService","query","filterBy","queryStr","search","minPrice","maxPrice","httpService","getById","toyId","remove","save","loadToys","dispatch","ToyFilter","TextField","onChange","this","handleInputs","label","id","FormControl","required","InputLabel","Select","labelId","defaultValue","MenuItem","value","FormControlLabel","control","Checkbox","labelPlacement","Component","login","logout","signup","getUsers","userId","update","user","userCred","_handleLogin","sessionStorage","clear","setItem","JSON","stringify","userCreds","userService","add","reviewId","review","addedReview","loadReviews","reviewService","reviews","_ToyApp","state","Infinity","removeToy","onAdd","ev","field","target","checked","setState","Button","mapDispatchToProps","ToyApp","connect","toyReducer","_Header","loggedInUser","username","isAdmin","history","goBack","Header","userReducer","withRouter","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","_ToyEdit","isLoading","onSave","preventDefault","match","params","newToy","saveToy","push","currToy","onUploadImg","cloudImg","secure_url","onSubmit","autoComplete","disabled","getYesNo","size","ToyEdit","initialState","selectedReview","ReviewPreview","content","socket","_ReviewList","ReviewList","reviewReducer","Modal","closeModal","isShown","onToggleChat","children","stopPropagation","socketService","setup","io","terminate","on","eventName","cb","off","emit","_ChatRoom","msg","txt","msgs","chatId","isTyping","isTypingMsg","addMsg","newMsg","prevState","sendMsg","handleInput","prevProps","placeholder","ChatRoom","_ToyDetails","reviewToEdit","isChatOn","loadtoy","Fragment","Date","createdAt","toLocaleDateString","ToyDetails","_LogIn","loginCred","email","password","loginHandleChange","doLogin","removeUser","loginSection","loadUsers","users","LogIn","_SignUp","signupCred","signupHandleChange","doSignup","signupCreds","signupSection","SignUp","_App","path","App","Boolean","hostname","localLoggedinUser","parse","mainReducer","combineReducers","filter","_toys","slice","toyIdx","findIndex","_toy","splice","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8960420.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport Button from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport Card from '@material-ui/core/Card';\nimport { CardHeader, CardMedia, Typography, CardContent } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        // height: '100%',\n        paddingTop: '56.25%', // 16:9\n        margin: '0 auto',\n        // maxWidth: '90%',\n        objectFit: 'contain',\n        // backgroundPositionY: '10%',\n        backgroundSize: 'contain'\n\n    },\n\n\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\n\n\nexport function ToyPreview(props) {\n    const classes = useStyles();\n    const { toy, onRemove } = props\n    let imgUrl = toy.imgUrl || `https://robohash.org/${toy.name}?set=set1`\n    return (\n        <Card className={`${classes.root} toy-card`}>\n            <CardHeader title={toy.name} subheader={toy.type} action={<IconButton color=\"inherit\" onClick={() => { onRemove(toy._id) }} aria-label=\"delete\" className={`${classes.margin} delete-card`}>\n                <DeleteIcon fontSize=\"large\" />\n            </IconButton>} />\n            <div className=\"toy-img-container\">\n\n                <CardMedia\n                    // image={\"https://media.istockphoto.com/photos/box-of-toys-on-the-floor-teddy-bear-in-boxvintage-tone-charitable-picture-id1017309510?k=6&m=1017309510&s=612x612&w=0&h=MgdOrJ2yn3u4S0AVpZpdW0isVU7Z8jfOo-q-JVfMy4Q=\"}\n                    image={imgUrl}\n                    title=\"TOYY\"\n                    className={classes.media}\n                />\n            </div>\n            {/* <Button onClick={()=>{onRemove(toy._id)}} className=\"remove-toy-btn\">X</Button> */}\n            {/* <h1>{}</h1> */}\n            <CardContent>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                    In Stock:  {(toy.inStock) ? ' true' : ' false'}\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n                    Price:   {`$${toy.price}`}\n                </Typography>\n            </CardContent>\n            {/* <p>{toy.type}</p> */}\n            {/* <img src={`https://robohash.org/${toy.name}?set=set2`} alt=\"\" /> */}\n            <section className=\"toy-prev-btns\">\n                <Button className=\"btn-link\" href=\"#text-buttons\" color=\"primary\">\n\n                    <NavLink to={`/edit/${toy._id}`}>Edit</NavLink>\n                </Button>\n\n                <Button className=\"btn-link\" href=\"#text-buttons\" color=\"primary\">\n                    <NavLink to={`/details/${toy._id}`}>Details</NavLink>\n                </Button>\n\n            </section>\n        </Card>\n    )\n}\n","import React from 'react'\nimport { ToyPreview } from './ToyPreview'\n\nexport function ToyList(props) {\n    const {toys, onRemove} = props\n    return (\n        <div className=\"toy-list\">\n            {   \n                toys.map(toy => <ToyPreview toy={toy} key={toy._id} onRemove={onRemove}/>)\n            }\n        </div>\n    )\n}\n","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : 'http://localhost:3030/api/'\r\n   \r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        console.log(data);\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService'\n\n\nconst resolveData = res => res.data\n\nexport const toyService = {\n    query,\n    getById,\n    remove,\n    save,\n}\n\nfunction query(filterBy) {\n    // const queryParams\n    // return httpService.get('toy', filterBy)\n\n    const queryStr = `?search=${filterBy.search}&minPrice=${filterBy.minPrice}&maxPrice=${filterBy.maxPrice}&type=${filterBy.type}&inStock=${filterBy.inStock}\n    `;\n    return httpService.get(`toy${queryStr}`);\n\n}\n\n\nfunction getById(toyId) {\n    return httpService.get(`toy/${toyId}`)\n\n}\n\nfunction remove(toyId) {\n    return httpService.delete(`toy/${toyId}`)\n\n}\n\nfunction save(toy) {\n    if (toy._id) {\n        return httpService.put(`toy/${toy._id}`, toy)\n\n    } else {\n        return httpService.post('toy', toy)\n\n    }\n}\n\n\n","import { toyService } from \"../../services/toyService\"\n\nexport function loadToys(filterBy) {\n    return async dispatch => {\n        const toys = await toyService.query(filterBy)\n        dispatch({ type: 'SET_TOYS', toys })\n    }\n}\n\nexport function removeToy(toyId) {\n    return async dispatch => {\n        const toy = await toyService.remove(toyId)\n        dispatch({ type: 'REMOVE_TOY', toyId })\n    }\n}\n\nexport function saveToy(toy) {\n    let type = (!toy._id) ? 'ADD_TOY' : 'UPDATE_TOY'\n    return async dispatch => {\n        const _toy = await toyService.save(toy)\n        dispatch({ type, toy })\n    }\n}\n\n// export function saveToy(toy) {\n//     let type = (!toy._id) ? 'ADD_TOY' : 'UPDATE_TOY'\n//     return dispatch => {\n//         return toyService.save(toy).then(toy => {\n//             return dispatch({ type, toy })\n//         })\n//     }\n// }\n","import React, { Component } from 'react'\nimport { TextField, Select, MenuItem, Checkbox, FormControlLabel, FormControl, FormLabel, InputLabel, FormHelperText } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { toyService } from '../services/toyService';\n\n\nexport class ToyFilter extends Component {\n\n \n    render() {\n        return (\n            <div className=\"filter-container\">\n                <TextField onChange={this.props.handleInputs} type=\"search\" label=\"Search\" className=\"search-input\" id=\"outlined-basic\" name=\"search\" />\n                <TextField onChange={this.props.handleInputs} type=\"number\" label=\"Min Price\" className=\"min-price\" id=\"outlined-basic\" name=\"minPrice\" />\n                <TextField onChange={this.props.handleInputs} type=\"number\" label=\"Max Price\" className=\"max-price\" id=\"outlined-basic\" name=\"maxPrice\" />\n                \n\n\n\n\n                <FormControl required className={'form-filter'}>\n                    <InputLabel id=\"demo-simple-select-required-label\">Filter By</InputLabel>\n                    <Select\n                        onChange={this.props.handleInputs}\n                        labelId=\"demo-simple-select-required-label\"\n                        id=\"demo-simple-select-required\"\n                        defaultValue=\"All\"\n                        name=\"type\"\n                        id=\"\"\n                        name=\"type\"\n                        // label=\"Filter\"\n                        \n                        // value={age}\n                    // className={classes.selectEmpty}\n                    >\n                        <MenuItem value=\"All\">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value=\"Funny\">Funny</MenuItem>\n                        <MenuItem value=\"Adult\">Adult</MenuItem>\n                        <MenuItem value=\"Educational\">Educational</MenuItem>\n                    </Select>\n                    {/* <FormHelperText>Filter</FormHelperText> */}\n                </FormControl>\n\n\n                <FormControlLabel\n                    value=\"top\"\n                    control={<Checkbox onChange={this.props.handleInputs} color=\"primary\" name=\"inStock\" />}\n                    label=\"In Stock\"\n                    labelPlacement=\"top\"\n                    className=\"check-box\"\n                />\n\n            </div>\n        )\n    }\n}\n","import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","import userService from '../../services/userService';\nimport { loading, doneLoading } from './systemActions';\n\n// THUNK\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      // example for loading\n      dispatch(loading());\n      const users = await userService.getUsers();\n      dispatch({ type: 'SET_USERS', users });\n    } catch (err) {\n      // example for rerouting - after changing the store\n      // history.push('/some/path');\n    } finally {\n      dispatch(doneLoading());\n    }\n  };\n}\n// THUNK\nexport function removeUser(userId) {\n  return async dispatch => {\n    try {\n      await userService.remove(userId);\n      dispatch({ type: 'USER_REMOVE', userId });\n    } catch (err) {\n    }\n  };\n}\n// THUNK\nexport function login(userCreds) {\n  return async dispatch => {\n    const user = await userService.login(userCreds);\n    dispatch({ type: 'SET_USER', user });\n  };\n}\nexport function signup(userCreds) {\n  return async dispatch => {\n    const user = await userService.signup(userCreds);\n    dispatch({ type: 'SET_USER', user });\n  };\n}\nexport function logout() {\n  return async dispatch => {\n    await userService.logout();\n    dispatch({ type: 'SET_USER', user: null });\n  };\n}\n","import httpService from './httpService';\r\n\r\nexport default {\r\n  add,\r\n  query,\r\n  remove\r\n};\r\n\r\n\r\n// return axios.get('api/toy/?id=1223&balance=13');\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}});\r\n\r\n\r\nfunction query(filterBy) {\r\n  console.log(\"query -> filterBy\", filterBy)\r\n  if (filterBy) var queryStr = `?toyId=${filterBy.toyId}`;\r\n  return httpService.get(`review${queryStr || ''}`);\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  return httpService.delete(`review/${reviewId}`);\r\n}\r\nasync function add(review) {\r\n  const addedReview  = await httpService.post(`review`, review);\r\n  return  addedReview\r\n}\r\n","import reviewService from \"../../services/reviewService\";\r\n\r\n// import reviewService from '../services/reviewService';\r\n\r\nexport function loadReviews(filterBy) {\r\n  console.log(\"loadReviews -> filterBy\", filterBy)\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query(filterBy);\r\n      console.log(\"loadReviews -> reviews\", reviews)\r\n      dispatch({ type: 'SET_REVIEWS', reviews });\r\n\r\n    } catch (err) {\r\n    }\r\n  };\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review);\r\n      dispatch({ type: 'REVIEW_ADD', review: addedReview });\r\n    } catch (err) {\r\n    }\r\n  };\r\n}\r\n","\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ToyList } from '../cmps/ToyList'\nimport { loadToys, removeToy } from '../store/actions/toyAction'\nimport { NavLink } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport { ToyFilter } from '../cmps/ToyFilter'\nimport { logout } from '../store/actions/userAction'\nimport { loadReviews } from '../store/actions/reviewActions'\n\n\n\nclass _ToyApp extends Component {\n\n    state = {\n        filterBy: {\n            search: '',\n            minPrice: -Infinity,\n            maxPrice: Infinity,\n            type: 'All',\n            inStock: false\n        }\n    }\n\n    componentDidMount() {\n        this.props.loadToys(this.state.filterBy)\n        this.props.loadReviews()\n    }\n\n    onRemove = (toyId) => {\n        this.props.removeToy(toyId)\n\n    }\n\n    onAdd = (ev) => {\n        return\n    }\n\n    handleInputs = (ev) => {\n        const field = ev.target.name\n        let value = (field === \"inStock\") ? ev.target.checked : ev.target.value\n        this.setState({ ...this.state, filterBy: { ...this.state.filterBy, [field]: value } }, () => {\n            this.props.loadToys(this.state.filterBy)\n        })\n    }\n\n    render() {\n        const { toys } = this.props\n        if (!toys) return <div>Loading...</div>\n        return (\n            <div className=\"toy-app\">\n                <section className=\"main-control-container\">\n                    <Button className=\"add-link\">\n                        <NavLink to=\"/edit\">Add Toy</NavLink>\n                    </Button>\n                    <ToyFilter filterBy={this.state.filterBy} handleInputs={this.handleInputs} />\n                </section>\n                <ToyList toys={toys} onRemove={this.onRemove} />\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        toys: state.toyReducer.toys\n    }\n}\nconst mapDispatchToProps = {\n    loadToys,\n    removeToy,\n    logout,\n    loadReviews\n\n}\n\nexport const ToyApp = connect(mapStateToProps, mapDispatchToProps)(_ToyApp)","import React, { Component } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { logout } from '../store/actions/userAction';\n\n\n\nclass _Header extends Component {\n\n    render() {\n        const { loggedInUser } = this.props\n        return (\n            <nav className=\"header-nav container\">\n                <h1>TOYS ARE TOYS</h1>\n                {loggedInUser && <section className=\"header-msg\">\n                    <h3>Hello {loggedInUser.username}</h3>\n                    {loggedInUser.isAdmin && <p>You Are An Admin!</p>}\n                </section>}\n                <Button>\n                    <NavLink to=\"/toy\">Toys</NavLink>\n                </Button>\n\n                <section className=\"header-btns\">\n                    <section className=\"back\">\n                        <Button onClick={()=>this.props.history.goBack()}>\n                            Back\n                    </Button>\n                    </section>\n\n                    <div className=\"log-container\">\n                        {!loggedInUser && <section className=\"login\">\n                            <Button>\n                                <NavLink to=\"/\">Login</NavLink>\n                            </Button>\n                        </section>}\n                        {loggedInUser && <section className=\"logout\">\n                            <Button onClick={this.props.logout}>\n                                <NavLink to=\"/\">Logout</NavLink>\n                            </Button>\n                        </section>}\n                    </div>\n\n                </section>\n\n            </nav>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    logout\n}\n\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Header))","export const cloudinaryService = {\n    uploadImg\n}\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"staviao\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'toyshop');\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        // console.log(data);\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n    // .then(res => res.json())\n    // .then(res => {\n    //     console.log(res)\n    //     // res.secure_url\n    //     return res\n    // })\n    // .catch (err => console.error(error))\n}\n","import React, { Component } from 'react'\nimport { saveToy } from '../store/actions/toyAction'\nimport { connect } from 'react-redux'\nimport { toyService } from '../services/toyService'\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { cloudinaryService } from '../services/cloudinarySerivice';\n\n\nexport class _ToyEdit extends Component {\n\n    state = {\n        name: '',\n        price: '',\n        type: '',\n        inStock: '',\n        imgUrl: '',\n        isLoading: ''\n    }\n\n    async componentDidMount() {\n\n        var toyId = this.props.match.params.toyId\n        if (toyId) {\n            const toy = await toyService.getById(toyId)\n            const { name, price, type, inStock, imgUrl } = toy;\n            this.setState({ ...this.state, name, price, type, inStock, imgUrl })\n        }\n        else {\n            return\n        }\n    }\n\n\n    handleInputs = (ev) => {\n        const field = ev.target.name\n        const value = ev.target.value\n        this.setState({ ...this.state, [field]: value })\n    }\n\n\n    onSave = async (ev) => {\n        ev.preventDefault()\n\n        this.setState({ isLoading: true })\n        const { name, price, type, imgUrl } = this.state\n        console.log(\"onSave -> imgUrl\", imgUrl)\n        let inStock = (this.state.inStock === 'true') ? true : false\n        const { toyId } = this.props.match.params\n\n        if (!toyId) {\n            console.log('addd1');\n            const newToy = {\n                name,\n                price: +price,\n                type,\n                inStock,\n                imgUrl\n            }\n            const _toy = await this.props.saveToy(newToy)\n            this.setState({ isLoading: '' })\n\n            this.props.history.push('/toy')\n\n\n        } else {\n            console.log('eddditt');\n\n\n            let currToy = await toyService.getById(toyId)\n            \n            console.log(\"onSave -> imgUrl\", imgUrl)\n            currToy = { ...currToy, name, price, type, inStock, imgUrl }\n            await this.props.saveToy(currToy)\n            this.setState({ isLoading: '' })\n\n            this.props.history.push('/toy')\n\n        }\n    }\n\n    onUploadImg = async (ev) => {\n        ev.preventDefault()\n        this.setState({isLoading: 'true'})\n        const cloudImg = await cloudinaryService.uploadImg(ev)\n        const imgUrl = cloudImg.secure_url\n        this.setState({isLoading: ''})\n        console.log(\"onUploadImg -> imgUrl\", imgUrl)\n        this.setState({ ...this.state, imgUrl })\n\n    }\n\n    getYesNo() {\n        if (this.state.inStock) {\n            return this.state.inStock\n\n        }\n    }\n\n    render() {\n        // const yesNo = this.getYesNo\n\n        return (\n            <form onSubmit={this.onSave} className=\"container edit-form\" action=\"\">\n                <div>\n\n                    <TextField variant=\"outlined\" className=\"edit-input name-input\" id=\"outlined-basic\" value={this.state.name} autoComplete=\"false\" onChange={this.handleInputs} label=\"Enter Toy's Name\" type=\"text\" name=\"name\" />\n\n                </div>\n                <div>\n\n                    <TextField variant=\"outlined\" className=\"edit-input price-input\" id=\"outlined-basic\" value={this.state.price} onChange={this.handleInputs} type=\"number\" name=\"price\" label=\"Enter Price\" />\n\n\n                </div>\n                <div>\n                    <Select value={this.state.type || '1'} onChange={this.handleInputs} name=\"type\" id=\"\">\n\n                        <MenuItem value={'1'} disabled>\n                            Type\n                        </MenuItem>\n                        <MenuItem value=\"Funny\">Funny</MenuItem>\n                        <MenuItem value=\"Adult\">Adult</MenuItem>\n                        <MenuItem value=\"Educational\">Educational</MenuItem>\n                    </Select>\n                </div>\n                <div>\n\n                    <Select value={this.getYesNo() || '1'} onChange={this.handleInputs} name=\"inStock\" id=\"\">\n                        <MenuItem value={'1'} disabled>\n                            In Stock\n                        </MenuItem>\n                        <MenuItem value=\"true\">Yes</MenuItem>\n                        <MenuItem value=\"false\">No</MenuItem>\n                    </Select>\n\n                </div>\n                <div>\n\n                    <TextField variant=\"outlined\" className=\"edit-input\" id=\"outlined-basic\" onChange={this.onUploadImg} type=\"file\" name=\"upload\" />\n\n\n                </div>\n\n                <Button disabled={this.state.isLoading} size=\"large\" variant=\"contained\" color=\"primary\" onClick={this.onSave} className=\"save-toy-btn\">Save</Button>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        toys: state.toyReducer.toys\n    }\n}\nconst mapDispatchToProps = {\n    saveToy\n}\n\nexport const ToyEdit = connect(mapStateToProps, mapDispatchToProps)(_ToyEdit)","const initialState = {\r\n  reviews: [],\r\n  selectedReview: null\r\n};\r\n\r\nexport function reviewReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews };\r\n    case 'REVIEW_ADD':\r\n      return { ...state, reviews: [...state.reviews, action.review] };\r\n    case 'REVIEW_UPDATE':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react'\nimport { reviewReducer } from '../store/reducers/reviewReducer'\n\nexport function ReviewPreview(props) {\n    console.log(\"ReviewPreview -> props\", props)\n\n    return (\n        <div>\n            {props.review.content}\n        </div>\n    )\n}\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport const socketService =  {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import React, { Component } from 'react'\n\nimport { ReviewPreview } from './ReviewPreview'\nimport { connect } from 'react-redux'\nimport { loadReviews } from '../store/actions/reviewActions'\n\nclass _ReviewList extends Component {\n\n    \n    render() {\n        const { reviews } = this.props\n        console.log(\"render -> reviews\", reviews)\n        return (\n\n            <div className=\"review-list\">\n                {\n                    reviews.map(review => <ReviewPreview review={review} key={review._id} />)\n                }\n            </div>\n\n\n        )\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        reviews: state.reviewReducer.reviews\n    }\n}\n\nconst mapDispatchToProps = {\n    loadReviews\n}\n\nexport const ReviewList = connect(mapStateToProps, mapDispatchToProps)(_ReviewList)","import React, { Component } from 'react'\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Button } from '@material-ui/core';\n\n\nexport class Modal extends Component {\n    state = {\n        // isShown: true\n    }\n    closeModal = () => {\n        this.setState({ isShown: false })\n        this.props.onToggleChat()\n    }\n    render() {\n        const { isShown } = this.state\n        const { children } = this.props\n        return (\n            <div className={`modal-content `}  onClick={(ev)  => ev.stopPropagation()}>\n                <IconButton className=\"close-modal\" onClick={this.closeModal}><CloseIcon/></IconButton>\n                {children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { socketService } from '../services/socketService';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nclass _ChatRoom extends Component {\n    state = {\n        msg: { username: 'Me', txt: '' },\n        msgs: [],\n        chatId: '',\n        isTyping: false,\n        isTypingMsg: '',\n\n    }\n\n\n    componentDidMount() {\n        const { loggedInUser, toyId } = this.props;\n        socketService.setup();\n        socketService.emit('chat id', toyId);\n        socketService.on('chat addMsg', this.addMsg);\n        socketService.on('get msgs', (msgs) => {\n            this.setState({ msgs })\n        });\n        socketService.on('userTyping', (msg) => {\n            var isTypingMsg = (msg)?`${msg} is typing...`:''\n\n            this.setState({ isTypingMsg})\n        })\n        this.setState(prevState => ({\n            ...prevState,\n            msg: { ...prevState.msg, username: loggedInUser.username }\n        }))\n\n    }\n\n    componentWillUnmount() {\n        socketService.off('chat addMsg', this.addMsg);\n        socketService.terminate();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.msg.txt === this.state.msg.txt) return\n        if (this.state.msg.txt) {\n            socketService.emit('user typing', this.props.loggedInUser.username)\n        } else {\n            socketService.emit('user typing', null)\n\n        }\n    }\n\n\n    addMsg = (newMsg) => {\n        if (newMsg.username === this.props.loggedInUser.username) newMsg.username = 'Me'\n        this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }));\n    };\n\n    sendMsg = ev => {\n        ev.preventDefault();\n        const { username } = this.props.loggedInUser\n        socketService.emit('chat newMsg', { msg: this.state.msg, toyId: this.props.toyId });\n        this.setState({ msg: { username, txt: '' }, isTypingMsg: '' });\n    };\n\n    handleInput = ({ target }) => {\n        const field = target.name;\n        const value = target.value;\n        var isTypingMsg = (value) ? this.state.isTypingMsg : ''\n        this.setState({\n            msg: {\n                ...this.state.msg,\n                [field]: value,\n            },\n            isTypingMsg\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"chat-container\">\n                {this.state.isTypingMsg && <span className=\"typing-msg\">{this.state.isTypingMsg}</span>}\n\n                <ul className=\"chat-msgs\">\n                    {this.state.msgs.map((msg) => {\n\n                        return <li key={msg.txt}><h4>{msg.username}:</h4><span> {msg.txt}</span></li>\n                    })}\n\n                </ul>\n                <form onSubmit={this.sendMsg} action=\"\">\n                    <TextField autoComplete=\"off\" value={this.state.msg.txt} onChange={this.handleInput} type=\"text\" placeholder=\"Type Message\" name=\"txt\" />\n                    <Button variant={\"text\"} className=\"send-btn\" onClick={this.sendMsg} >Send</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\n\n\nexport const ChatRoom = connect(mapStateToProps)(_ChatRoom);","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { toyService } from '../services/toyService'\nimport { ReviewList } from '../cmps/ReviewList'\nimport Button from '@material-ui/core/Button';\nimport { loadReviews } from '../store/actions/reviewActions';\nimport { Modal } from '../cmps/Modal';\nimport { ChatRoom } from '../cmps/ChatRoom';\nimport ModeCommentIcon from '@material-ui/icons/ModeComment';\n\n// import { toyService } from '../services/toyService'\nexport class _ToyDetails extends Component {\n    loadReviews\n    state = {\n        toy: {},\n        reviewToEdit: {},\n        isChatOn: false,\n\n    }\n\n\n    async componentDidMount() {\n        await this.loadtoy()\n\n        await this.props.loadReviews({ toyId: this.state.toy._id })\n        console.log(\"componentDidMount -> this.state\", this.state)\n\n        // this.props.loadReviews({toyId: this.state.toy._id})\n\n    }\n\n    onToggleChat = () => {\n        if (!this.props.loggedInUser) return\n        console.log(\"onOpenChat -> this.state\", this.state)\n        const {isChatOn} = this.state\n        this.setState({...this.state, isChatOn: !isChatOn})\n    }\n\n\n\n    async loadtoy() {\n        const toyId = this.props.match.params.toyId\n        const toy = await toyService.getById(toyId)\n        this.setState({ toy })\n    }\n\n    render() {\n        const { toy } = this.state\n\n        if (!toy) return <div>Loading...</div>\n        return (\n            <React.Fragment>\n\n\n                <div className=\"toy-details\">\n\n                    <div className=\"toy-detail\">\n                        <h3>Name: </h3>\n                        <span>{toy.name}</span>\n                    </div>\n\n                    <div className=\"toy-detail\">\n                        <h3>Price: </h3>\n                        <span>{toy.price}</span>\n                    </div>\n\n                    <div className=\"toy-detail\">\n                        <h3>Type: </h3>\n                        <span>{toy.type}</span>\n                    </div>\n\n                    <div className=\"toy-detail\">\n                        <h3>Created at: </h3>\n                        <span>{new Date(toy.createdAt).toLocaleDateString()}</span>\n                    </div>\n\n                    <div className=\"toy-detail\">\n                        <h3>In Stock: </h3>\n                        <span>{(toy.inStock) ? 'yes' : 'no'}</span>\n                    </div>\n                </div >\n                <section className=\"add-review-btn\">\n                    <Button variant=\"outlined\">Add Review</Button>\n                </section>\n                <section onClick={() => {this.onToggleChat()}} className=\"chat-btn-container\">\n\n                    <ModeCommentIcon fontSize=\"large\" className=\"chat-btn\" />\n\n                </section>\n                {this.props.loggedInUser && <ReviewList />}\n                {this.state.isChatOn &&\n                    <Modal onToggleChat={this.onToggleChat}>\n                        <ChatRoom toyId={toy._id} />\n                    </Modal>}\n\n            </React.Fragment>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n\n    return {\n        toys: state.toyReducer.toys,\n        loggedInUser: state.userReducer.loggedInUser\n    }\n}\n\nconst mapDispatchToProps = {\n    loadReviews\n\n}\n\nexport const ToyDetails = connect(mapStateToProps, mapDispatchToProps)(_ToyDetails)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, TextField, IconButton } from '@material-ui/core';\n\n\nimport {\n  loadUsers,\n  removeUser,\n  login,\n  logout,\n  signup\n} from '../store/actions/userAction';\nclass _LogIn extends Component {\n  state = {\n    msg: '',\n    loginCred: {\n      email: '',\n      password: ''\n    },\n\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n\n  loginHandleChange = ev => {\n    const { name, value } = ev.target;\n    this.setState(prevState => ({\n      loginCred: {\n        ...prevState.loginCred,\n        [name]: value\n      }\n    }));\n  };\n\n\n  doLogin = async ev => {\n    ev.preventDefault();\n    const { email, password } = this.state.loginCred;\n    if (!email || !password) {\n      return this.setState({ msg: 'Please enter user/password' });\n    }\n    const userCreds = { email, password };\n    this.props.login(userCreds);\n    this.setState({ loginCred: { email: '', password: '' } });\n    this.props.history.push('/toy')\n  };\n\n\n  removeUser = userId => {\n    this.props.removeUser(userId);\n  };\n  render() {\n\n    let loginSection = (\n      <form className=\"login-form\" onSubmit={this.doLogin}>\n        <TextField\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"email\"\n          value={this.state.loginCred.email}\n          onChange={this.loginHandleChange}\n          placeholder=\"Email\"\n        />\n        <br />\n        <TextField\n          type=\"password\"\n          autoComplete=\"off\"\n          name=\"password\"\n          value={this.state.loginCred.password}\n          onChange={this.loginHandleChange}\n          placeholder=\"Password\"\n        />\n        <br />\n        <Button onClick={this.doLogin}>Login</Button>\n      </form>\n    );\n\n    const { loggedInUser } = this.props;\n\n    return (\n      <div className=\"test\">\n\n        <h2>{this.state.msg}</h2>\n        {loggedInUser && (\n          <div>\n            <h2>Welcome:  {loggedInUser.username}</h2>\n            <button onClick={this.props.logout}>Logout</button>\n          </div>\n        )}\n        {!loggedInUser && loginSection}\n\n        <div className=\"sign-up-btn-container\">\n\n        </div>\n        <hr />\n        <Button className=\"sign-up-btn\" onClick={() => { this.props.history.push('/signup') }} >Sign up</Button>\n        {/* <button onClick={this.props.loadUsers}>Get All Users</button> */}\n        {this.props.isLoading && 'Loading...'}\n        {false && this.props.users && <ul>\n\n          {this.props.users.map(user => (\n            <li key={user._id}>\n              <pre>{JSON.stringify(user, null, 2)}</pre>\n              <button\n                onClick={() => {\n                  this.removeUser(user._id);\n                }}\n              >\n                Remove {user.username}\n              </button>\n            </li>\n          ))}\n        </ul>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n\n  return {\n    users: state.userReducer.users,\n    loggedInUser: state.userReducer.loggedInUser,\n    // isLoading: state.system.isLoading\n  };\n};\nconst mapDispatchToProps = {\n  login,\n  logout,\n  signup,\n  removeUser,\n  loadUsers\n};\n\nexport const LogIn = connect(mapStateToProps, mapDispatchToProps)(_LogIn);\n","export function loading() {\r\n  return { type: 'LOADING_START' }\r\n}\r\nexport function doneLoading() {\r\n  return { type: 'LOADING_DONE' }\r\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  signup\n} from '../store/actions/userAction';\nimport { Button, TextField } from '@material-ui/core';\n\nclass _SignUp extends Component {\n  state = {\n    msg: '',\n    signupCred: {\n      email: '',\n      password: '',\n      username: ''\n    }\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n\n\n\n  signupHandleChange = ev => {\n    const { name, value } = ev.target;\n    this.setState(prevState => ({\n      signupCred: {\n        ...prevState.signupCred,\n        [name]: value\n      }\n    }));\n  };\n\n\n\n  doSignup = async ev => {\n    ev.preventDefault();\n    console.log('hey');\n    const { email, password, username } = this.state.signupCred;\n    if (!email || !password || !username) {\n      return this.setState({ msg: 'All TextFields are required!' });\n    }\n    const signupCreds = { email, password, username };\n    this.props.signup(signupCreds);\n    this.setState({ signupCred: { email: '', password: '', username: '' } });\n    this.props.history.push('/toy')\n\n  };\n\n  removeUser = userId => {\n    this.props.removeUser(userId);\n  };\n  render() {\n    let signupSection = (\n      <form className=\"signup-form\" onSubmit={this.doSignup}>\n        <TextField\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"email\"\n          value={this.state.signupCred.email}\n          onChange={this.signupHandleChange}\n          placeholder=\"Email\"\n        />\n        <br />\n        <TextField\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"off\"\n          value={this.state.signupCred.password}\n          onChange={this.signupHandleChange}\n          placeholder=\"Password\"\n        />\n        <br />\n        <TextField\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"username\"\n          value={this.state.signupCred.username}\n          onChange={this.signupHandleChange}\n          placeholder=\"Username\"\n        />\n        <br />\n        <Button onClick={this.doSignup} className=\"signup-btn\" >Signup</Button>\n      </form>\n    );\n\n\n\n    const { loggedInUser } = this.props;\n\n    console.log(\"render -> loggedInUser\", loggedInUser)\n    return (\n      <div className=\"login-form\">\n       \n        <h2>{this.state.msg}</h2>\n        {loggedInUser && (\n          <div>\n            <h2>Welcome:  {loggedInUser.username}</h2>\n            <button onClick={this.props.logout}>Logout</button>\n          </div>\n        )}\n        {!loggedInUser && signupSection}\n        {/* <h2>Login</h2>\n        <form>div</form>\n\n        <h2>Signup</h2>\n        <form></form> */}\n\n        <hr />\n        {/* <button onClick={this.props.loadUsers}>Get All Users</button> */}\n        {this.props.isLoading && 'Loading...'}\n        {false && this.props.users && <ul>\n\n          {this.props.users.map(user => (\n            <li key={user._id}>\n              <pre>{JSON.stringify(user, null, 2)}</pre>\n              <button\n                onClick={() => {\n                  this.removeUser(user._id);\n                }}\n              >\n                Remove {user.username}\n              </button>\n            </li>\n          ))}\n        </ul>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n\n  console.log(\"state\", state)\n  return {\n    users: state.userReducer.users,\n    loggedInUser: state.userReducer.loggedInUser,\n    // isLoading: state.system.isLoading\n  };\n};\nconst mapDispatchToProps = {\n\n  signup,\n\n};\n\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp);\n","import React, { Component } from 'react'\nimport { ToyApp } from './pages/ToyApp';\nimport { Switch, Route } from 'react-router';\nimport { Header } from './cmps/Header';\nimport { ToyEdit } from './pages/ToyEdit';\nimport { ToyDetails } from './pages/ToyDetails';\nimport { connect } from 'react-redux';\nimport { loadToys } from './store/actions/toyAction';\nimport '../src/styles/global.scss'\nimport { LogIn } from './pages/LogIn';\nimport { logout } from './store/actions/userAction';\nimport { SignUp } from './pages/SignUp';\n\n\nclass _App extends Component {\n\n  componentDidMount() {\n    // this.props.loadToys()\n  }\n  \n  render() {\n    return (\n      <main className=\"main-toy-app\">\n        <header className=\"main-header\"><Header logout={this.props.logout} /></header>\n        <Switch>\n          <Route component={ToyDetails} path=\"/details/:toyId\" />\n          <Route component={ToyEdit} path=\"/edit/:toyId\" />\n          <Route component={ToyEdit} path=\"/edit\" />\n          <Route component={ToyApp} path=\"/toy\" />\n          <Route component={SignUp} path=\"/signup\" />\n          <Route component={LogIn} path=\"/\" />\n        </Switch>\n      </main>\n    );\n\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    toys: state.toyReducer.toys\n  }\n}\n\nconst mapDispatchToProps = {\n  loadToys,\n  logout\n}\n\nexport const App = connect(mapStateToProps, mapDispatchToProps)(_App)\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    toys: []\n}\n\nexport function toyReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'SET_TOYS':\n            return {\n                ...state,\n                toys: action.toys\n            }\n        case 'REMOVE_TOY': {\n            return {\n                ...state,\n                toys: state.toys.filter(toy => toy._id !== action.toyId)\n            }\n        }\n\n        case 'ADD_TOY': {\n            \n            var _toys = state.toys.slice()\n            // toys.unshift(action.toy)\n\n            return {...state, toys: [action.toy, ..._toys] }\n        }\n\n        case 'UPDATE_TOY': {\n            const toyIdx = state.toys.findIndex(_toy => _toy._id === action.toy._id)\n\n            const toys = state.toys.slice()\n            toys.splice(toyIdx, 1, action.toy)\n            return { toys }\n        }\n\n        // case 'SAFE_TOY': {\n        //     const { toy } = action\n        //     const toyIdx = state.toys.findIndex(_toy => _toy._id === toy._id)\n        //     if (toyIdx === -1) {\n        //         return {\n        //             ...state,\n        //             toys: [toy, ...state.toys]\n        //         }\n        //     } else {\n        //         const toys = state.toys.slice()\n        //         toys.splice(toyIdx, 1, toy)\n        //         return ({ ...state, toys })\n        //     }\n\n        // }\n\n\n        default:\n            return state;\n    }\n} ","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'USER_REMOVE':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      };\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {createStore, applyMiddleware, compose, combineReducers} from 'redux'\nimport thunk from 'redux-thunk'\nimport { toyReducer } from './reducers/toyReducer';\nimport { userReducer } from './reducers/userReducer';\nimport { reviewReducer } from './reducers/reviewReducer';\n\nconst mainReducer = combineReducers({\n    toyReducer,\n    userReducer,\n    reviewReducer\n\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}